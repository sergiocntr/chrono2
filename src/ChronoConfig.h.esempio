#ifndef ChronocConfig_h
#define ChronocConfig_h
/*************************************************************************************************************************
  Configure connection parameters
*************************************************************************************************************************/
#include <ESP8266WiFi.h>
const char* SKETCH_ID = "chrono";                  //Non-overlaping name of sketch
const char* SKETCH_VERSION = "0.1";                //Sketch version
const char* MQTT_PUBLISH_TOPIC = "nextion-out";     //Topic name to publish on mqtt
const char* MQTT_SUBSCRIBE_TOPIC = "nextion-in";    //Topic to subscribe at mqtt for message reception
const char* systemTopic = "/system/general"; // {"topic":"UpTime","hours": time_now,"Day":day};
//TOPIC COMANDO IN USCITA -> publish
//il cronotermostato invia questi dati:
//avvio acqua calda *** anche subscrive per ricevere il dato
const char* riscaldaTopic = "**********"; // 0 o 1 per attivare il riscaldamento
//avvio riscaldamento *** anche subscrive per ricevere il dato
const char* acquaTopic ="**********";  //0 o 1 per attivare il preriscaldamento acqua
//sblocco caldaia
const char* resetTopic ="**********"; //0 o 1 per premere pulsante reset
//logTopic
const char* logTopic ="**********"; // temp H20 caldaia
//TOPIC COMANDO IN INGRESSO -> subscrive
//il cronotermostato riceve questi dati:
//stato caldaia in blocco
const char* alarmTopic ="**********";   //ON OFF allarme blocco attivo
//temp H2O caldaia
const char* extSensTopic ="**********"; // temp H20 caldaia
//temp CASA
const char* casaSensTopic = "**********";
//temp EXT
const char* extTempTopic = "**********";
const char* WIFI_SSID = "**********";
const char* WIFI_PASSWORD = "**********";
const char* MQTT_SERVER = "**********";          //IP Adress of Machine running MQTT Broker
const char* MQTT_USER = "**********";                      //MQTT Broker User Name
const char* MQTT_PASSWORD = "**********";           //MQTT Broker Password
const uint16_t MQTT_PORT = **********;
IPAddress ip(***, ***, ***, ***); //Node static IP
IPAddress gateway(***, ***, ***, ***);
IPAddress subnet(***, ***, ***, ***);
/*************************************************************************************************************************
  Configure database parameters
*************************************************************************************************************************/
char buffer[30] = {0};
int db_array_default_value = 0;                    //default value to write in database e.g. default gpio state
#endif
